function solution(participant, completion) {
    var answer = '';
    var p = [...participant]
    
    for(var k=0; k<participant.length; k++) {
        for(var i=0; i<completion.length; i++) {
            if(participant[k]==completion[i]) {
                participant.splice(k,1)
                console.log(k)
            }                
        }
    }
    console.log(participant)
    return answer;
}
//splice 때문에 if에 들어간 원소가 지워져서 배열이 짧아짐, 그다음 원소(k)는 넘어가버림
//slice는 원본 배열을 지우지는 못함, 결국 splice slice로 할 수 없음

function solution(participant, completion) {
    var answer = '';
    
    participant.sort()
    completion.sort()
    console.log(participant, completion)
    for(var k=0; k<participant.length; k++) {
        if(participant[k]!==completion[k]){
            answer = participant[k];
            break;
        }
    }
}
//하나만 다르므로 두 배열 정렬시켜서 다르게되면 그 원소 결과값으로

function solution(participant, completion) {
    const myMap = new Map();
    
        for ( const participant of participants){
            if(!myMap.get(participant)){
                myMap.set(participant, 1);
            }else{
                myMap.set(participant, myMap.get(participant)+1);
            }
        }
    
        for(const completion of completions){
            if(myMap.get(completion)){
                myMap.set(completion, myMap.get(completion)-1);
            }
        }
        
        for(const participant of participants){
            if(myMap.get(participant) && myMap.get(participant) >=1 ){
                answer = participant;
            }
        }
}
//해시 이용 풀이